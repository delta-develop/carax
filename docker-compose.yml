services:
  app:
    build: .
    container_name: carax
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    env_file:
      - .env
    volumes:
      - .:/app

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: carax
      POSTGRES_PASSWORD: carax123
      POSTGRES_DB: conversations
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    depends_on:
      - app
    command: http --domain=trusting-shrew-blindly.ngrok-free.app app:8000
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}

  sonar-db:
    image: postgres:15
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - db_data:/var/lib/postgresql/data

  sonarqube:
    image: sonarqube:community
    depends_on:
      - sonar-db
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_extensions:/opt/sonarqube/extensions
      - sonar_logs:/opt/sonarqube/logs

volumes:
  mongo_data:
  pg_data:
  db_data: {}
  sonar_data: {}
  sonar_extensions: {}
  sonar_logs: {}
